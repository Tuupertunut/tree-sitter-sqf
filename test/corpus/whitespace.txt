==================
Empty file
==================



------------------

(source_file)

==================
File with whitespace only
==================

  

------------------

(source_file)

==================
Command name splitting
==================

loc setPosition pos

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_4)
          (expression
            (nular_expression
              (variable))))))))

==================
Command name splitting
==================

loc set position pos

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_4)
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

array select(index)

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_4)
          (expression
            (nular_expression
              (parentheses_expression
                (expression
                  (nular_expression
                    (variable)))))))))))

==================
Command argument joining
:error
==================

array selectindex

------------------

==================
Command argument joining
==================

[arg]call func

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (array
                (expression
                  (nular_expression
                    (variable))))))
          (alphanumeric_binary_command_4)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
:error
==================

argscall func

------------------

==================
Command argument joining
==================

[arg]call{code}

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (array
                (expression
                  (nular_expression
                    (variable))))))
          (alphanumeric_binary_command_4)
          (expression
            (nular_expression
              (code_block
                (code
                  (statement
                    (expression
                      (nular_expression
                        (variable)))))))))))))

==================
Command argument joining
==================

argscallfunc

------------------

(source_file
  (code
    (statement
      (expression
        (nular_expression
          (variable))))))

==================
Command argument joining
==================

args
call
func

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_4)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

count"abc"

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (alphanumeric_unary_command)
          (expression
            (nular_expression
              (string))))))))

==================
Command argument joining
==================

countabc

------------------

(source_file
  (code
    (statement
      (expression
        (nular_expression
          (variable))))))

==================
Command argument joining
==================

count abc

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (alphanumeric_unary_command)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

count
abc

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (alphanumeric_unary_command)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

! false

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (special_unary_command)
          (expression
            (nular_expression
              (alphanumeric_nular_command))))))))

==================
Command argument joining
==================

!false

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (special_unary_command)
          (expression
            (nular_expression
              (alphanumeric_nular_command))))))))

==================
Command argument joining
==================

not false

------------------

(source_file
  (code
    (statement
      (expression
        (unary_expression
          (alphanumeric_unary_command)
          (expression
            (nular_expression
              (alphanumeric_nular_command))))))))

==================
Command argument joining
==================

notfalse

------------------

(source_file
  (code
    (statement
      (expression
        (nular_expression
          (variable))))))

==================
Command argument joining
==================

1 + 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
==================

1+1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
==================

1+ 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
==================

1 +1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
==================

abc + abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

abc+abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

abc+ abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

abc +abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_6)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

1 atan2 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (alphanumeric_binary_command_7)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
:error
==================

1atan21

------------------

==================
Command argument joining
==================

1atan2 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (number)))
          (alphanumeric_binary_command_7)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
:error
==================

1 atan21

------------------

==================
Command argument joining
==================

abc atan2 abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_7)
          (expression
            (nular_expression
              (variable))))))))

==================
Command argument joining
==================

abcatan2abc

------------------

(source_file
  (code
    (statement
      (expression
        (nular_expression
          (variable))))))

==================
Command argument joining
:error
==================

abcatan2 abc

------------------

==================
Command argument joining
:error
==================

abc atan2abc

------------------

==================
Command argument joining
==================

abc atan2 + abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc atan2+abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc atan2+ abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc * abs abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_7)
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc *abs abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_7)
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc * + abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc *+ abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc*+abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (special_binary_command_7)
          (expression
            (unary_expression
              (special_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
==================

abc atan2 abs abc

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (nular_expression
              (variable)))
          (alphanumeric_binary_command_7)
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (variable))))))))))

==================
Command argument joining
:error
==================

abc atan2absabc

------------------

==================
Command argument joining
:error
==================

abc atan2abs abc

------------------

==================
Command argument joining
==================

count "abc" atan2 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (string)))))
          (alphanumeric_binary_command_7)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument joining
==================

count "abc"atan2 1

------------------

(source_file
  (code
    (statement
      (expression
        (binary_expression
          (expression
            (unary_expression
              (alphanumeric_unary_command)
              (expression
                (nular_expression
                  (string)))))
          (alphanumeric_binary_command_7)
          (expression
            (nular_expression
              (number))))))))

==================
Command argument ambiguity
:error
==================

0x1atan2 0x1

------------------

==================
Assignment modifier joining
==================

private_xyz = abc

------------------

(source_file
  (code
    (statement
      (assignment
        (variable)
        (expression
          (nular_expression
            (variable)))))))
